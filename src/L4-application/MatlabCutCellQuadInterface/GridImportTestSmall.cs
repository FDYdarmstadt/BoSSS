using BoSSS.Foundation.Grid;
using MPI.Wrappers;
using NUnit.Framework;
using System;
using System.Collections.Generic;
using System.Diagnostics;
using System.Linq;

namespace BoSSS.Application.ExternalBinding {


    /// <summary>
    /// Basic Testing for external language binding.
    /// </summary>
    [TestFixture]
    static public class GridImportTestSmall {

        
        internal static int[][] faces = new int[][] {
 new int[]{1, 12, 34, 23},
 new int[]{22, 23, 34, 33},
 new int[]{2, 13, 35, 24},
 new int[]{23, 24, 35, 34},
 new int[]{3, 14, 36, 25},
 new int[]{24, 25, 36, 35},
 new int[]{4, 15, 37, 26},
 new int[]{25, 26, 37, 36},
 new int[]{5, 16, 38, 27},
 new int[]{26, 27, 38, 37},
 new int[]{6, 17, 39, 28},
 new int[]{27, 28, 39, 38},
 new int[]{7, 18, 40, 29},
 new int[]{28, 29, 40, 39},
 new int[]{8, 19, 41, 30},
 new int[]{29, 30, 41, 40},
 new int[]{9, 20, 42, 31},
 new int[]{30, 31, 42, 41},
 new int[]{31, 32, 43, 42},
 new int[]{23, 34, 56, 45},
 new int[]{44, 45, 56, 55},
 new int[]{24, 35, 57, 46},
 new int[]{45, 46, 57, 56},
 new int[]{25, 36, 58, 47},
 new int[]{46, 47, 58, 57},
 new int[]{26, 37, 59, 48},
 new int[]{47, 48, 59, 58},
 new int[]{27, 38, 60, 49},
 new int[]{48, 49, 60, 59},
 new int[]{28, 39, 61, 50},
 new int[]{49, 50, 61, 60},
 new int[]{29, 40, 62, 51},
 new int[]{50, 51, 62, 61},
 new int[]{30, 41, 63, 52},
 new int[]{51, 52, 63, 62},
 new int[]{31, 42, 64, 53},
 new int[]{52, 53, 64, 63},
 new int[]{53, 54, 65, 64},
 new int[]{45, 56, 78, 67},
 new int[]{66, 67, 78, 77},
 new int[]{46, 57, 79, 68},
 new int[]{67, 68, 79, 78},
 new int[]{47, 58, 80, 69},
 new int[]{68, 69, 80, 79},
 new int[]{48, 59, 81, 70},
 new int[]{69, 70, 81, 80},
 new int[]{49, 60, 82, 71},
 new int[]{70, 71, 82, 81},
 new int[]{50, 61, 83, 72},
 new int[]{71, 72, 83, 82},
 new int[]{51, 62, 84, 73},
 new int[]{72, 73, 84, 83},
 new int[]{52, 63, 85, 74},
 new int[]{73, 74, 85, 84},
 new int[]{53, 64, 86, 75},
 new int[]{74, 75, 86, 85},
 new int[]{75, 76, 87, 86},
 new int[]{67, 78, 100, 89},
 new int[]{88, 89, 100, 99},
 new int[]{68, 79, 101, 90},
 new int[]{89, 90, 101, 100},
 new int[]{69, 80, 102, 91},
 new int[]{90, 91, 102, 101},
 new int[]{70, 81, 103, 92},
 new int[]{91, 92, 103, 102},
 new int[]{71, 82, 104, 93},
 new int[]{92, 93, 104, 103},
 new int[]{72, 83, 105, 94},
 new int[]{93, 94, 105, 104},
 new int[]{73, 84, 106, 95},
 new int[]{94, 95, 106, 105},
 new int[]{74, 85, 107, 96},
 new int[]{95, 96, 107, 106},
 new int[]{75, 86, 108, 97},
 new int[]{96, 97, 108, 107},
 new int[]{97, 98, 109, 108},
 new int[]{89, 100, 122, 111},
 new int[]{110, 111, 122, 121},
 new int[]{90, 101, 123, 112},
 new int[]{111, 112, 123, 122},
 new int[]{91, 102, 124, 113},
 new int[]{112, 113, 124, 123},
 new int[]{92, 103, 125, 114},
 new int[]{113, 114, 125, 124},
 new int[]{93, 104, 126, 115},
 new int[]{114, 115, 126, 125},
 new int[]{94, 105, 127, 116},
 new int[]{115, 116, 127, 126},
 new int[]{95, 106, 128, 117},
 new int[]{116, 117, 128, 127},
 new int[]{96, 107, 129, 118},
 new int[]{117, 118, 129, 128},
 new int[]{97, 108, 130, 119},
 new int[]{118, 119, 130, 129},
 new int[]{119, 120, 131, 130},
 new int[]{111, 122, 144, 133},
 new int[]{132, 133, 144, 143},
 new int[]{112, 123, 145, 134},
 new int[]{133, 134, 145, 144},
 new int[]{113, 124, 146, 135},
 new int[]{134, 135, 146, 145},
 new int[]{114, 125, 147, 136},
 new int[]{135, 136, 147, 146},
 new int[]{115, 126, 148, 137},
 new int[]{136, 137, 148, 147},
 new int[]{116, 127, 149, 138},
 new int[]{137, 138, 149, 148},
 new int[]{117, 128, 150, 139},
 new int[]{138, 139, 150, 149},
 new int[]{118, 129, 151, 140},
 new int[]{139, 140, 151, 150},
 new int[]{119, 130, 152, 141},
 new int[]{140, 141, 152, 151},
 new int[]{141, 142, 153, 152},
 new int[]{133, 144, 166, 155},
 new int[]{154, 155, 166, 165},
 new int[]{134, 145, 167, 156},
 new int[]{155, 156, 167, 166},
 new int[]{135, 146, 168, 157},
 new int[]{156, 157, 168, 167},
 new int[]{136, 147, 169, 158},
 new int[]{157, 158, 169, 168},
 new int[]{137, 148, 170, 159},
 new int[]{158, 159, 170, 169},
 new int[]{138, 149, 171, 160},
 new int[]{159, 160, 171, 170},
 new int[]{139, 150, 172, 161},
 new int[]{160, 161, 172, 171},
 new int[]{140, 151, 173, 162},
 new int[]{161, 162, 173, 172},
 new int[]{141, 152, 174, 163},
 new int[]{162, 163, 174, 173},
 new int[]{163, 164, 175, 174},
 new int[]{155, 166, 188, 177},
 new int[]{176, 177, 188, 187},
 new int[]{156, 167, 189, 178},
 new int[]{177, 178, 189, 188},
 new int[]{157, 168, 190, 179},
 new int[]{178, 179, 190, 189},
 new int[]{158, 169, 191, 180},
 new int[]{179, 180, 191, 190},
 new int[]{159, 170, 192, 181},
 new int[]{180, 181, 192, 191},
 new int[]{160, 171, 193, 182},
 new int[]{181, 182, 193, 192},
 new int[]{161, 172, 194, 183},
 new int[]{182, 183, 194, 193},
 new int[]{162, 173, 195, 184},
 new int[]{183, 184, 195, 194},
 new int[]{163, 174, 196, 185},
 new int[]{184, 185, 196, 195},
 new int[]{185, 186, 197, 196},
 new int[]{177, 188, 210, 199},
 new int[]{198, 199, 210, 209},
 new int[]{178, 189, 211, 200},
 new int[]{199, 200, 211, 210},
 new int[]{179, 190, 212, 201},
 new int[]{200, 201, 212, 211},
 new int[]{180, 191, 213, 202},
 new int[]{201, 202, 213, 212},
 new int[]{181, 192, 214, 203},
 new int[]{202, 203, 214, 213},
 new int[]{182, 193, 215, 204},
 new int[]{203, 204, 215, 214},
 new int[]{183, 194, 216, 205},
 new int[]{204, 205, 216, 215},
 new int[]{184, 195, 217, 206},
 new int[]{205, 206, 217, 216},
 new int[]{185, 196, 218, 207},
 new int[]{206, 207, 218, 217},
 new int[]{207, 208, 219, 218},
 new int[]{199, 210, 232, 221},
 new int[]{200, 211, 233, 222},
 new int[]{201, 212, 234, 223},
 new int[]{202, 213, 235, 224},
 new int[]{203, 214, 236, 225},
 new int[]{204, 215, 237, 226},
 new int[]{205, 216, 238, 227},
 new int[]{206, 217, 239, 228},
 new int[]{207, 218, 240, 229},
 new int[]{220, 221, 232, 231},
 new int[]{221, 222, 233, 232},
 new int[]{222, 223, 234, 233},
 new int[]{223, 224, 235, 234},
 new int[]{224, 225, 236, 235},
 new int[]{225, 226, 237, 236},
 new int[]{226, 227, 238, 237},
 new int[]{227, 228, 239, 238},
 new int[]{228, 229, 240, 239},
 new int[]{229, 230, 241, 240},
 new int[]{0, 11, 12, 1},
 new int[]{1, 12, 13, 2},
 new int[]{2, 13, 14, 3},
 new int[]{3, 14, 15, 4},
 new int[]{4, 15, 16, 5},
 new int[]{5, 16, 17, 6},
 new int[]{6, 17, 18, 7},
 new int[]{7, 18, 19, 8},
 new int[]{8, 19, 20, 9},
 new int[]{9, 20, 21, 10},
 new int[]{0, 22, 33, 11},
 new int[]{22, 44, 55, 33},
 new int[]{44, 66, 77, 55},
 new int[]{66, 88, 99, 77},
 new int[]{88, 110, 121, 99},
 new int[]{110, 132, 143, 121},
 new int[]{132, 154, 165, 143},
 new int[]{154, 176, 187, 165},
 new int[]{176, 198, 209, 187},
 new int[]{198, 220, 231, 209},
 new int[]{10, 21, 43, 32},
 new int[]{32, 43, 65, 54},
 new int[]{54, 65, 87, 76},
 new int[]{76, 87, 109, 98},
 new int[]{98, 109, 131, 120},
 new int[]{120, 131, 153, 142},
 new int[]{142, 153, 175, 164},
 new int[]{164, 175, 197, 186},
 new int[]{186, 197, 219, 208},
 new int[]{208, 219, 241, 230},
 new int[]{0, 1, 23, 22},
 new int[]{22, 23, 45, 44},
 new int[]{44, 45, 67, 66},
 new int[]{66, 67, 89, 88},
 new int[]{88, 89, 111, 110},
 new int[]{110, 111, 133, 132},
 new int[]{132, 133, 155, 154},
 new int[]{154, 155, 177, 176},
 new int[]{176, 177, 199, 198},
 new int[]{198, 199, 221, 220},
 new int[]{1, 2, 24, 23},
 new int[]{23, 24, 46, 45},
 new int[]{45, 46, 68, 67},
 new int[]{67, 68, 90, 89},
 new int[]{89, 90, 112, 111},
 new int[]{111, 112, 134, 133},
 new int[]{133, 134, 156, 155},
 new int[]{155, 156, 178, 177},
 new int[]{177, 178, 200, 199},
 new int[]{199, 200, 222, 221},
 new int[]{2, 3, 25, 24},
 new int[]{24, 25, 47, 46},
 new int[]{46, 47, 69, 68},
 new int[]{68, 69, 91, 90},
 new int[]{90, 91, 113, 112},
 new int[]{112, 113, 135, 134},
 new int[]{134, 135, 157, 156},
 new int[]{156, 157, 179, 178},
 new int[]{178, 179, 201, 200},
 new int[]{200, 201, 223, 222},
 new int[]{3, 4, 26, 25},
 new int[]{25, 26, 48, 47},
 new int[]{47, 48, 70, 69},
 new int[]{69, 70, 92, 91},
 new int[]{91, 92, 114, 113},
 new int[]{113, 114, 136, 135},
 new int[]{135, 136, 158, 157},
 new int[]{157, 158, 180, 179},
 new int[]{179, 180, 202, 201},
 new int[]{201, 202, 224, 223},
 new int[]{4, 5, 27, 26},
 new int[]{26, 27, 49, 48},
 new int[]{48, 49, 71, 70},
 new int[]{70, 71, 93, 92},
 new int[]{92, 93, 115, 114},
 new int[]{114, 115, 137, 136},
 new int[]{136, 137, 159, 158},
 new int[]{158, 159, 181, 180},
 new int[]{180, 181, 203, 202},
 new int[]{202, 203, 225, 224},
 new int[]{5, 6, 28, 27},
 new int[]{27, 28, 50, 49},
 new int[]{49, 50, 72, 71},
 new int[]{71, 72, 94, 93},
 new int[]{93, 94, 116, 115},
 new int[]{115, 116, 138, 137},
 new int[]{137, 138, 160, 159},
 new int[]{159, 160, 182, 181},
 new int[]{181, 182, 204, 203},
 new int[]{203, 204, 226, 225},
 new int[]{6, 7, 29, 28},
 new int[]{28, 29, 51, 50},
 new int[]{50, 51, 73, 72},
 new int[]{72, 73, 95, 94},
 new int[]{94, 95, 117, 116},
 new int[]{116, 117, 139, 138},
 new int[]{138, 139, 161, 160},
 new int[]{160, 161, 183, 182},
 new int[]{182, 183, 205, 204},
 new int[]{204, 205, 227, 226},
 new int[]{7, 8, 30, 29},
 new int[]{29, 30, 52, 51},
 new int[]{51, 52, 74, 73},
 new int[]{73, 74, 96, 95},
 new int[]{95, 96, 118, 117},
 new int[]{117, 118, 140, 139},
 new int[]{139, 140, 162, 161},
 new int[]{161, 162, 184, 183},
 new int[]{183, 184, 206, 205},
 new int[]{205, 206, 228, 227},
 new int[]{8, 9, 31, 30},
 new int[]{30, 31, 53, 52},
 new int[]{52, 53, 75, 74},
 new int[]{74, 75, 97, 96},
 new int[]{96, 97, 119, 118},
 new int[]{118, 119, 141, 140},
 new int[]{140, 141, 163, 162},
 new int[]{162, 163, 185, 184},
 new int[]{184, 185, 207, 206},
 new int[]{206, 207, 229, 228},
 new int[]{9, 10, 32, 31},
 new int[]{31, 32, 54, 53},
 new int[]{53, 54, 76, 75},
 new int[]{75, 76, 98, 97},
 new int[]{97, 98, 120, 119},
 new int[]{119, 120, 142, 141},
 new int[]{141, 142, 164, 163},
 new int[]{163, 164, 186, 185},
 new int[]{185, 186, 208, 207},
 new int[]{207, 208, 230, 229},
 new int[]{11, 33, 34, 12},
 new int[]{33, 55, 56, 34},
 new int[]{55, 77, 78, 56},
 new int[]{77, 99, 100, 78},
 new int[]{99, 121, 122, 100},
 new int[]{121, 143, 144, 122},
 new int[]{143, 165, 166, 144},
 new int[]{165, 187, 188, 166},
 new int[]{187, 209, 210, 188},
 new int[]{209, 231, 232, 210},
 new int[]{12, 34, 35, 13},
 new int[]{34, 56, 57, 35},
 new int[]{56, 78, 79, 57},
 new int[]{78, 100, 101, 79},
 new int[]{100, 122, 123, 101},
 new int[]{122, 144, 145, 123},
 new int[]{144, 166, 167, 145},
 new int[]{166, 188, 189, 167},
 new int[]{188, 210, 211, 189},
 new int[]{210, 232, 233, 211},
 new int[]{13, 35, 36, 14},
 new int[]{35, 57, 58, 36},
 new int[]{57, 79, 80, 58},
 new int[]{79, 101, 102, 80},
 new int[]{101, 123, 124, 102},
 new int[]{123, 145, 146, 124},
 new int[]{145, 167, 168, 146},
 new int[]{167, 189, 190, 168},
 new int[]{189, 211, 212, 190},
 new int[]{211, 233, 234, 212},
 new int[]{14, 36, 37, 15},
 new int[]{36, 58, 59, 37},
 new int[]{58, 80, 81, 59},
 new int[]{80, 102, 103, 81},
 new int[]{102, 124, 125, 103},
 new int[]{124, 146, 147, 125},
 new int[]{146, 168, 169, 147},
 new int[]{168, 190, 191, 169},
 new int[]{190, 212, 213, 191},
 new int[]{212, 234, 235, 213},
 new int[]{15, 37, 38, 16},
 new int[]{37, 59, 60, 38},
 new int[]{59, 81, 82, 60},
 new int[]{81, 103, 104, 82},
 new int[]{103, 125, 126, 104},
 new int[]{125, 147, 148, 126},
 new int[]{147, 169, 170, 148},
 new int[]{169, 191, 192, 170},
 new int[]{191, 213, 214, 192},
 new int[]{213, 235, 236, 214},
 new int[]{16, 38, 39, 17},
 new int[]{38, 60, 61, 39},
 new int[]{60, 82, 83, 61},
 new int[]{82, 104, 105, 83},
 new int[]{104, 126, 127, 105},
 new int[]{126, 148, 149, 127},
 new int[]{148, 170, 171, 149},
 new int[]{170, 192, 193, 171},
 new int[]{192, 214, 215, 193},
 new int[]{214, 236, 237, 215},
 new int[]{17, 39, 40, 18},
 new int[]{39, 61, 62, 40},
 new int[]{61, 83, 84, 62},
 new int[]{83, 105, 106, 84},
 new int[]{105, 127, 128, 106},
 new int[]{127, 149, 150, 128},
 new int[]{149, 171, 172, 150},
 new int[]{171, 193, 194, 172},
 new int[]{193, 215, 216, 194},
 new int[]{215, 237, 238, 216},
 new int[]{18, 40, 41, 19},
 new int[]{40, 62, 63, 41},
 new int[]{62, 84, 85, 63},
 new int[]{84, 106, 107, 85},
 new int[]{106, 128, 129, 107},
 new int[]{128, 150, 151, 129},
 new int[]{150, 172, 173, 151},
 new int[]{172, 194, 195, 173},
 new int[]{194, 216, 217, 195},
 new int[]{216, 238, 239, 217},
 new int[]{19, 41, 42, 20},
 new int[]{41, 63, 64, 42},
 new int[]{63, 85, 86, 64},
 new int[]{85, 107, 108, 86},
 new int[]{107, 129, 130, 108},
 new int[]{129, 151, 152, 130},
 new int[]{151, 173, 174, 152},
 new int[]{173, 195, 196, 174},
 new int[]{195, 217, 218, 196},
 new int[]{217, 239, 240, 218},
 new int[]{20, 42, 43, 21},
 new int[]{42, 64, 65, 43},
 new int[]{64, 86, 87, 65},
 new int[]{86, 108, 109, 87},
 new int[]{108, 130, 131, 109},
 new int[]{130, 152, 153, 131},
 new int[]{152, 174, 175, 153},
 new int[]{174, 196, 197, 175},
 new int[]{196, 218, 219, 197},
 new int[]{218, 240, 241, 219}
        };

        internal static int[] neighbour = new int[] {
1,
10,
2,
11,
3,
12,
4,
13,
5,
14,
6,
15,
7,
16,
8,
17,
9,
18,
19,
11,
20,
12,
21,
13,
22,
14,
23,
15,
24,
16,
25,
17,
26,
18,
27,
19,
28,
29,
21,
30,
22,
31,
23,
32,
24,
33,
25,
34,
26,
35,
27,
36,
28,
37,
29,
38,
39,
31,
40,
32,
41,
33,
42,
34,
43,
35,
44,
36,
45,
37,
46,
38,
47,
39,
48,
49,
41,
50,
42,
51,
43,
52,
44,
53,
45,
54,
46,
55,
47,
56,
48,
57,
49,
58,
59,
51,
60,
52,
61,
53,
62,
54,
63,
55,
64,
56,
65,
57,
66,
58,
67,
59,
68,
69,
61,
70,
62,
71,
63,
72,
64,
73,
65,
74,
66,
75,
67,
76,
68,
77,
69,
78,
79,
71,
80,
72,
81,
73,
82,
74,
83,
75,
84,
76,
85,
77,
86,
78,
87,
79,
88,
89,
81,
90,
82,
91,
83,
92,
84,
93,
85,
94,
86,
95,
87,
96,
88,
97,
89,
98,
99,
91,
92,
93,
94,
95,
96,
97,
98,
99

        };

        internal static int[] owner = new int[] {
0,
0,
1,
1,
2,
2,
3,
3,
4,
4,
5,
5,
6,
6,
7,
7,
8,
8,
9,
10,
10,
11,
11,
12,
12,
13,
13,
14,
14,
15,
15,
16,
16,
17,
17,
18,
18,
19,
20,
20,
21,
21,
22,
22,
23,
23,
24,
24,
25,
25,
26,
26,
27,
27,
28,
28,
29,
30,
30,
31,
31,
32,
32,
33,
33,
34,
34,
35,
35,
36,
36,
37,
37,
38,
38,
39,
40,
40,
41,
41,
42,
42,
43,
43,
44,
44,
45,
45,
46,
46,
47,
47,
48,
48,
49,
50,
50,
51,
51,
52,
52,
53,
53,
54,
54,
55,
55,
56,
56,
57,
57,
58,
58,
59,
60,
60,
61,
61,
62,
62,
63,
63,
64,
64,
65,
65,
66,
66,
67,
67,
68,
68,
69,
70,
70,
71,
71,
72,
72,
73,
73,
74,
74,
75,
75,
76,
76,
77,
77,
78,
78,
79,
80,
80,
81,
81,
82,
82,
83,
83,
84,
84,
85,
85,
86,
86,
87,
87,
88,
88,
89,
90,
91,
92,
93,
94,
95,
96,
97,
98,
90,
91,
92,
93,
94,
95,
96,
97,
98,
99,
0,
1,
2,
3,
4,
5,
6,
7,
8,
9,
0,
10,
20,
30,
40,
50,
60,
70,
80,
90,
9,
19,
29,
39,
49,
59,
69,
79,
89,
99,
0,
10,
20,
30,
40,
50,
60,
70,
80,
90,
1,
11,
21,
31,
41,
51,
61,
71,
81,
91,
2,
12,
22,
32,
42,
52,
62,
72,
82,
92,
3,
13,
23,
33,
43,
53,
63,
73,
83,
93,
4,
14,
24,
34,
44,
54,
64,
74,
84,
94,
5,
15,
25,
35,
45,
55,
65,
75,
85,
95,
6,
16,
26,
36,
46,
56,
66,
76,
86,
96,
7,
17,
27,
37,
47,
57,
67,
77,
87,
97,
8,
18,
28,
38,
48,
58,
68,
78,
88,
98,
9,
19,
29,
39,
49,
59,
69,
79,
89,
99,
0,
10,
20,
30,
40,
50,
60,
70,
80,
90,
1,
11,
21,
31,
41,
51,
61,
71,
81,
91,
2,
12,
22,
32,
42,
52,
62,
72,
82,
92,
3,
13,
23,
33,
43,
53,
63,
73,
83,
93,
4,
14,
24,
34,
44,
54,
64,
74,
84,
94,
5,
15,
25,
35,
45,
55,
65,
75,
85,
95,
6,
16,
26,
36,
46,
56,
66,
76,
86,
96,
7,
17,
27,
37,
47,
57,
67,
77,
87,
97,
8,
18,
28,
38,
48,
58,
68,
78,
88,
98,
9,
19,
29,
39,
49,
59,
69,
79,
89,
99

        };

        internal static double[,] points = new double[,] {
{0, 0, -0.001},
{0.0002, 0, -0.001},
{0.0004, 0, -0.001},
{0.0006, 0, -0.001},
{0.0008, 0, -0.001},
{0.001, 0, -0.001},
{0.0012, 0, -0.001},
{0.0014, 0, -0.001},
{0.0016, 0, -0.001},
{0.0018, 0, -0.001},
{0.002, 0, -0.001},
{0, 0.0001, -0.001},
{0.0002, 0.0001, -0.001},
{0.0004, 0.0001, -0.001},
{0.0006, 0.0001, -0.001},
{0.0008, 0.0001, -0.001},
{0.001, 0.0001, -0.001},
{0.0012, 0.0001, -0.001},
{0.0014, 0.0001, -0.001},
{0.0016, 0.0001, -0.001},
{0.0018, 0.0001, -0.001},
{0.002, 0.0001, -0.001},
{0, 0, -0.0008},
{0.0002, 0, -0.0008},
{0.0004, 0, -0.0008},
{0.0006, 0, -0.0008},
{0.0008, 0, -0.0008},
{0.001, 0, -0.0008},
{0.0012, 0, -0.0008},
{0.0014, 0, -0.0008},
{0.0016, 0, -0.0008},
{0.0018, 0, -0.0008},
{0.002, 0, -0.0008},
{0, 0.0001, -0.0008},
{0.0002, 0.0001, -0.0008},
{0.0004, 0.0001, -0.0008},
{0.0006, 0.0001, -0.0008},
{0.0008, 0.0001, -0.0008},
{0.001, 0.0001, -0.0008},
{0.0012, 0.0001, -0.0008},
{0.0014, 0.0001, -0.0008},
{0.0016, 0.0001, -0.0008},
{0.0018, 0.0001, -0.0008},
{0.002, 0.0001, -0.0008},
{0, 0, -0.0006},
{0.0002, 0, -0.0006},
{0.0004, 0, -0.0006},
{0.0006, 0, -0.0006},
{0.0008, 0, -0.0006},
{0.001, 0, -0.0006},
{0.0012, 0, -0.0006},
{0.0014, 0, -0.0006},
{0.0016, 0, -0.0006},
{0.0018, 0, -0.0006},
{0.002, 0, -0.0006},
{0, 0.0001, -0.0006},
{0.0002, 0.0001, -0.0006},
{0.0004, 0.0001, -0.0006},
{0.0006, 0.0001, -0.0006},
{0.0008, 0.0001, -0.0006},
{0.001, 0.0001, -0.0006},
{0.0012, 0.0001, -0.0006},
{0.0014, 0.0001, -0.0006},
{0.0016, 0.0001, -0.0006},
{0.0018, 0.0001, -0.0006},
{0.002, 0.0001, -0.0006},
{0, 0, -0.0004},
{0.0002, 0, -0.0004},
{0.0004, 0, -0.0004},
{0.0006, 0, -0.0004},
{0.0008, 0, -0.0004},
{0.001, 0, -0.0004},
{0.0012, 0, -0.0004},
{0.0014, 0, -0.0004},
{0.0016, 0, -0.0004},
{0.0018, 0, -0.0004},
{0.002, 0, -0.0004},
{0, 0.0001, -0.0004},
{0.0002, 0.0001, -0.0004},
{0.0004, 0.0001, -0.0004},
{0.0006, 0.0001, -0.0004},
{0.0008, 0.0001, -0.0004},
{0.001, 0.0001, -0.0004},
{0.0012, 0.0001, -0.0004},
{0.0014, 0.0001, -0.0004},
{0.0016, 0.0001, -0.0004},
{0.0018, 0.0001, -0.0004},
{0.002, 0.0001, -0.0004},
{0, 0, -0.0002},
{0.0002, 0, -0.0002},
{0.0004, 0, -0.0002},
{0.0006, 0, -0.0002},
{0.0008, 0, -0.0002},
{0.001, 0, -0.0002},
{0.0012, 0, -0.0002},
{0.0014, 0, -0.0002},
{0.0016, 0, -0.0002},
{0.0018, 0, -0.0002},
{0.002, 0, -0.0002},
{0, 0.0001, -0.0002},
{0.0002, 0.0001, -0.0002},
{0.0004, 0.0001, -0.0002},
{0.0006, 0.0001, -0.0002},
{0.0008, 0.0001, -0.0002},
{0.001, 0.0001, -0.0002},
{0.0012, 0.0001, -0.0002},
{0.0014, 0.0001, -0.0002},
{0.0016, 0.0001, -0.0002},
{0.0018, 0.0001, -0.0002},
{0.002, 0.0001, -0.0002},
{0, 0, 0},
{0.0002, 0, 0},
{0.0004, 0, 0},
{0.0006, 0, 0},
{0.0008, 0, 0},
{0.001, 0, 0},
{0.0012, 0, 0},
{0.0014, 0, 0},
{0.0016, 0, 0},
{0.0018, 0, 0},
{0.002, 0, 0},
{0, 0.0001, 0},
{0.0002, 0.0001, 0},
{0.0004, 0.0001, 0},
{0.0006, 0.0001, 0},
{0.0008, 0.0001, 0},
{0.001, 0.0001, 0},
{0.0012, 0.0001, 0},
{0.0014, 0.0001, 0},
{0.0016, 0.0001, 0},
{0.0018, 0.0001, 0},
{0.002, 0.0001, 0},
{0, 0, 0.0002},
{0.0002, 0, 0.0002},
{0.0004, 0, 0.0002},
{0.0006, 0, 0.0002},
{0.0008, 0, 0.0002},
{0.001, 0, 0.0002},
{0.0012, 0, 0.0002},
{0.0014, 0, 0.0002},
{0.0016, 0, 0.0002},
{0.0018, 0, 0.0002},
{0.002, 0, 0.0002},
{0, 0.0001, 0.0002},
{0.0002, 0.0001, 0.0002},
{0.0004, 0.0001, 0.0002},
{0.0006, 0.0001, 0.0002},
{0.0008, 0.0001, 0.0002},
{0.001, 0.0001, 0.0002},
{0.0012, 0.0001, 0.0002},
{0.0014, 0.0001, 0.0002},
{0.0016, 0.0001, 0.0002},
{0.0018, 0.0001, 0.0002},
{0.002, 0.0001, 0.0002},
{0, 0, 0.0004},
{0.0002, 0, 0.0004},
{0.0004, 0, 0.0004},
{0.0006, 0, 0.0004},
{0.0008, 0, 0.0004},
{0.001, 0, 0.0004},
{0.0012, 0, 0.0004},
{0.0014, 0, 0.0004},
{0.0016, 0, 0.0004},
{0.0018, 0, 0.0004},
{0.002, 0, 0.0004},
{0, 0.0001, 0.0004},
{0.0002, 0.0001, 0.0004},
{0.0004, 0.0001, 0.0004},
{0.0006, 0.0001, 0.0004},
{0.0008, 0.0001, 0.0004},
{0.001, 0.0001, 0.0004},
{0.0012, 0.0001, 0.0004},
{0.0014, 0.0001, 0.0004},
{0.0016, 0.0001, 0.0004},
{0.0018, 0.0001, 0.0004},
{0.002, 0.0001, 0.0004},
{0, 0, 0.0006},
{0.0002, 0, 0.0006},
{0.0004, 0, 0.0006},
{0.0006, 0, 0.0006},
{0.0008, 0, 0.0006},
{0.001, 0, 0.0006},
{0.0012, 0, 0.0006},
{0.0014, 0, 0.0006},
{0.0016, 0, 0.0006},
{0.0018, 0, 0.0006},
{0.002, 0, 0.0006},
{0, 0.0001, 0.0006},
{0.0002, 0.0001, 0.0006},
{0.0004, 0.0001, 0.0006},
{0.0006, 0.0001, 0.0006},
{0.0008, 0.0001, 0.0006},
{0.001, 0.0001, 0.0006},
{0.0012, 0.0001, 0.0006},
{0.0014, 0.0001, 0.0006},
{0.0016, 0.0001, 0.0006},
{0.0018, 0.0001, 0.0006},
{0.002, 0.0001, 0.0006},
{0, 0, 0.0008},
{0.0002, 0, 0.0008},
{0.0004, 0, 0.0008},
{0.0006, 0, 0.0008},
{0.0008, 0, 0.0008},
{0.001, 0, 0.0008},
{0.0012, 0, 0.0008},
{0.0014, 0, 0.0008},
{0.0016, 0, 0.0008},
{0.0018, 0, 0.0008},
{0.002, 0, 0.0008},
{0, 0.0001, 0.0008},
{0.0002, 0.0001, 0.0008},
{0.0004, 0.0001, 0.0008},
{0.0006, 0.0001, 0.0008},
{0.0008, 0.0001, 0.0008},
{0.001, 0.0001, 0.0008},
{0.0012, 0.0001, 0.0008},
{0.0014, 0.0001, 0.0008},
{0.0016, 0.0001, 0.0008},
{0.0018, 0.0001, 0.0008},
{0.002, 0.0001, 0.0008},
{0, 0, 0.001},
{0.0002, 0, 0.001},
{0.0004, 0, 0.001},
{0.0006, 0, 0.001},
{0.0008, 0, 0.001},
{0.001, 0, 0.001},
{0.0012, 0, 0.001},
{0.0014, 0, 0.001},
{0.0016, 0, 0.001},
{0.0018, 0, 0.001},
{0.002, 0, 0.001},
{0, 0.0001, 0.001},
{0.0002, 0.0001, 0.001},
{0.0004, 0.0001, 0.001},
{0.0006, 0.0001, 0.001},
{0.0008, 0.0001, 0.001},
{0.001, 0.0001, 0.001},
{0.0012, 0.0001, 0.001},
{0.0014, 0.0001, 0.001},
{0.0016, 0.0001, 0.001},
{0.0018, 0.0001, 0.001},
{0.002, 0.0001, 0.001}
            };

        internal static string[] names = new string[] {"left", "right", "empty"};
        internal static int[] patchIDs = new int[] {0,
                                                       1,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2,
                                                       2
        };
        

        /*
        internal static int[][] faces = new int[][] {
            new int[] {1, 6 ,16 ,11 },
            new int[] {2, 7, 17, 12 },
            new int[] {3, 8, 18, 13 },
            new int[] {0, 10, 15, 5 },
            new int[] {4, 9, 19, 14 },
            new int[] {0, 1, 11, 10 },
            new int[] {1, 2, 12, 11 },
            new int[] {2, 3, 13, 12 },
            new int[] {3, 4, 14, 13 },
            new int[] {5, 15, 16, 6 },
            new int[] {6, 16, 17, 7 },
            new int[] {7, 17, 18, 8 },
            new int[] {8, 18, 19, 9 },
            new int[] {0, 5, 6, 1 },
            new int[] {1, 6, 7, 2 },
            new int[] {2, 7, 8, 3 },
            new int[] {3, 8, 9, 4 },
            new int[] {10, 11, 16, 15 },
            new int[] {11, 12, 17, 16 },
            new int[] {12, 13, 18, 17 },
            new int[] {13, 14, 19, 18 },
        };

        internal static double[,] points = new double[,] {
            { 0, 0, 0 },
            { 1.25, 0, 0  },
            { 2.5, 0, 0  },
            { 3.75, 0, 0  },
            { 5, 0, 0  },
            { 0, 1, 0  },
            { 1.25, 1, 0  },
            { 2.5, 1, 0  },
            { 3.75, 1, 0  },
            { 5, 1, 0  },
            { 0, 0, 1  },
            { 1.25, 0, 1  },
            { 2.5, 0, 1  },
            { 3.75, 0, 1  },
            { 5, 0, 1  },
            { 0, 1, 1  },
            { 1.25, 1, 1  },
            { 2.5, 1, 1  },
            { 3.75, 1 ,1  },
            { 5, 1, 1  }
        };

        internal static int[] owner = new int[] {
            0,
            1,
            2,
            0,
            3,
            0,
            1,
            2,
            3,
            0,
            1,
            2,
            3,
            0,
            1,
            2,
            3,
            0,
            1,
            2,
            3 
        };


        internal static int[] neighbour = new int[] {
            1,
            2,
            3
        };

        internal static string[] names = new string[] { "left", "right", "empty" };
        internal static int[] patchIDs = new int[] { 0,
            1,
            2,
            2,
            2,
            2,
            2,
            2,
            2,
            2,
            2,
            2,
            2,
            2,
            2,
            2,
            2,
            2 
        };
        */

        public static void GridImportMain() {
            
            //int nPoints = points.GetLength(0);
            //int nFaces = owner.Length;
            //int nInternalFaces = neighbour.Length;


            Init();
            ConvertFOAMGrid();
            Cleanup();

        }

        static int Max(int a, int b) {
            if (a > b)
            {
                return a;
            } else {
                return b;
            }
        }

        /// <summary>
        /// test for <see cref="OpenFOAMGrid"/>
        /// </summary>
        [Test]
        public static void ConvertFOAMGrid() {

            int nCells = Max(owner.Max(), neighbour.Max()) + 1;
            var g = GenerateFOAMGrid();

            Assert.AreEqual(g.GridData.iLogicalCells.Count, nCells, "Mismatch in expected number of cells.");
        }

        public static OpenFOAMGrid GenerateFOAMGrid() {

            int nCells = Max(owner.Max(), neighbour.Max()) + 1;
            var g = new OpenFOAMGrid(nCells, faces, neighbour, owner, points, names, patchIDs, -1);

            return g;
        }

        
        static Initializer MyInit;

        /// <summary>
        /// MPI Init
        /// </summary>
        [OneTimeSetUp]
        public static void Init() {
            MyInit = new Initializer();
            Console.WriteLine("Test");
            MyInit.BoSSSInitialize();
        }

        /// <summary>
        /// MPI shutdown
        /// </summary>
        [OneTimeTearDown]
        public static void Cleanup() {
            MyInit.BoSSSFinalize();
        }

    }
}
